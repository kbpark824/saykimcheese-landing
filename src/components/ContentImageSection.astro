---
const { src, alt, title, image_position = "left", color_variant = "beige" } = Astro.props;

const isImageLeft = image_position === "left";

// Card background colors
const colorVariants = {
  beige: "bg-amber-100",
  brown: "bg-red-900"
};

// Text colors based on background
const textColors = {
  beige: "text-gray-900",
  brown: "text-white"
};

const cardBgColor = colorVariants[color_variant] || colorVariants.beige;
const textColor = textColors[color_variant] || textColors.beige;

// Layout classes
const containerDirection = isImageLeft ? "lg:flex-row" : "lg:flex-row-reverse";
const imageOffset = isImageLeft ? "lg:ml-20" : "lg:mr-20";
const cardPadding = isImageLeft ? "lg:pr-64" : "lg:pl-64";
---

<section class="py-4">
  <div class="mx-auto max-w-7xl px-2">
    <div class={`flex flex-col ${containerDirection} lg:items-stretch relative`}>
      <!-- Colored background card -->
      <div class="lg:w-4/5 relative">
        <div class={`${cardBgColor} rounded-3xl h-[28rem] lg:h-[32rem] flex items-center p-8 lg:p-16 ${cardPadding}`}>
          <div class={`w-full ${isImageLeft ? 'lg:max-w-md' : 'lg:max-w-md lg:ml-auto'}`}>
            <h2 class={`text-3xl lg:text-5xl font-serif font-bold mb-6 ${textColor}`}>
              {title}
            </h2>
            <div class={`text-lg lg:text-xl leading-relaxed space-y-4 ${textColor} ${color_variant === 'brown' ? 'opacity-90' : 'opacity-80'}`}>
              <slot />
            </div>
          </div>
        </div>
      </div>
      
      <!-- Overlapping image -->
      <div class={`lg:w-2/5 mt-8 lg:mt-0 lg:absolute lg:top-8 lg:bottom-8 ${isImageLeft ? 'lg:right-0' : 'lg:left-0'} ${imageOffset} z-10`}>
        <img 
          src={src} 
          alt={alt} 
          loading="lazy" 
          class="w-full h-80 lg:h-96 object-cover rounded-3xl shadow-2xl"
        />
      </div>
    </div>
  </div>
</section>